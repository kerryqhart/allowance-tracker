✅ Phase 2: Modal Modularization - Break up 53KB monolithic modals.rs

## What was accomplished:
- **Created focused modal modules** under `ui/components/modals/` with 4 specialized modules:
  - `child_selector.rs` - Child selection modal (from 136 lines)
  - `parental_control.rs` - Multi-stage parental authentication (from 261 lines)
  - `money_transaction.rs` - Generic income/expense transaction modal (from 226 lines)
  - `day_action_overlay.rs` - Calendar day action overlays (from 340 lines)
  - `shared/mod.rs` - Common modal functionality and main coordinator

## Organizational improvements:
- **Separated concerns** into logical, maintainable modal modules
- **Applied calendar_renderer pattern** to modal organization
- **Maintained API compatibility** through re-exports in mod.rs
- **Preserved all existing functionality** with zero implementation changes

## Technical details:
- Extracted 963+ lines from monolithic modals.rs into focused modules
- Each modal module is self-contained with clear responsibilities
- Shared utilities module for common modal coordination
- Re-export structure maintains import compatibility

## Validation:
- ✅ Compilation successful with modular modal structure
- ✅ App runs correctly with extracted modals
- ✅ All modal functionality preserved
- ✅ No implementation logic changes (organization only)

This completes the major modal extraction and prepares for Phase 3 (Styling
Unification). The massive 53KB modals.rs file has been successfully broken
into maintainable, focused modal modules following established patterns. 