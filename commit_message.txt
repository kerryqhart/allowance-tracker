feat: Complete Transaction Bounded Context migration from shared to domain models

- Created goal_mapper.rs with full bidirectional conversion between domain and DTO models
- Fixed goal.rs domain model to remove shared::GoalState dependency, created DomainGoalState
- Refactored transaction_service.rs to use domain models only, removed dual domain/DTO methods
- Updated money_management.rs to support domain commands (CreateTransactionCommand)
- Fixed all Tauri commands in lib.rs to use domain models and mappers at boundaries
- App builds successfully, all core transaction functionality now uses domain models

Migration Progress:
✅ Domain Models Foundation (all major models exist)
✅ Goal Mapper Creation  
✅ Goal Domain Model Fix
✅ Transaction Bounded Context Migration
⏳ Next: Allowance Bounded Context migration

The architecture now properly separates domain logic from DTOs, with mappers handling
conversions at the boundaries between layers. This maintains clean domain boundaries
while preserving API compatibility. 