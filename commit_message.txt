refactor: Eliminate massive code duplication and simplify architecture

MAJOR ARCHITECTURAL CLEANUP (~1000 lines of dead code removed):

üóëÔ∏è DELETED DEAD CODE:
- Remove 5 entire async repository files (450+ lines)
  * csv_child_repository.rs (async duplicate)
  * csv_transaction_repository.rs (async duplicate) 
  * csv_parental_control_repository.rs (async duplicate)
  * csv_allowance_repository.rs (async duplicate)
  * goal_repository.rs (450 lines of unused async code)

üèóÔ∏è CENTRALIZED CHILD DIRECTORY MAPPING:
- Move all child ID ‚Üí directory logic to CsvConnection (single source of truth)
- Remove duplicate find_child_directory_by_id() methods across repositories
- Remove duplicate generate_safe_directory_name() methods
- Update all repositories to use centralized connection.find_child_directory_by_id()

‚úÇÔ∏è ELIMINATED TRAIT ABSTRACTION:
- Remove GoalStorage trait (25+ lines) - unnecessary for desktop-only app
- Convert CsvGoalRepository to direct public methods
- Remove trait imports and re-exports
- Simplify goal_service.rs to use concrete types

üßπ ADDITIONAL CLEANUP:
- Remove unused imports and dead code paths
- Fix compilation errors from removed dependencies
- Update all callers to use centralized logic
- Maintain all existing functionality with much cleaner code

‚úÖ VERIFICATION:
- All 166 unit tests passing
- No functional changes to user-facing features  
- Dramatic reduction in code complexity
- Perfect preparation for desktop egui architecture

This refactoring eliminates fundamental architectural problems around
duplicate logic and multiple sources of truth that were causing bugs
in child selection and allowance configuration. 