Fix cross-month balance forwarding by simplifying REST layer transaction fetching

Problem: Future months (July, August, etc.) were not properly carrying forward 
projected balances from previous months' future allowances. This caused 
discontinuities where August would start with June's balance instead of July's 
ending balance.

Root Cause: The calendar REST API was making two separate calls:
1. Get transactions for target month only
2. Get single most recent transaction before target month
This approach missed intermediate months' future allowances needed for proper 
balance calculation.

Solution: Simplified the REST layer to make a single comprehensive call that 
fetches ALL transactions from beginning of time to end of target month. This 
ensures the domain layer receives complete transaction history including all 
future allowances from previous months.

Changes:
- Modified calendar_apis.rs to use single transaction service call
- Removed dual-call approach (target month + historical)
- Domain layer unchanged - existing generate_calendar_month works correctly 
  when given proper comprehensive data
- Added comprehensive unit test for cross-month balance forwarding validation

Result: Future months now properly start with the previous month's ending 
balance, creating smooth balance progression across month boundaries. 